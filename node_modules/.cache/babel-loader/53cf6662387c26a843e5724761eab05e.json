{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_PROFILE } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // login json\n\nconst loginData = {\n  \"username\": \"hruday@gmail.com\",\n  \"password\": 'hruday123' // Load User\n  // export const loadUser = () => async dispatch => {\n  //   if (localStorage.token) {\n  //     setAuthToken(localStorage.token);\n  //   }\n  //   try {\n  //     const res = await axios.get('/api/auth');\n  //     dispatch({\n  //       type: USER_LOADED,\n  //       payload: res.data\n  //     });\n  //   } catch (err) {\n  //     dispatch({\n  //       type: AUTH_ERROR\n  //     });\n  //   }\n  // };\n  // Login User\n\n};\nexport const login = (email, password) => async dispatch => {\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    // const res = await axios.post('/api/auth', body, config);\n    let formData = JSON.parse(body);\n\n    if (loginData.username === formData.email && loginData.password === formData.password) {\n      console.log('login success');\n      dispatch({\n        type: LOGIN_SUCCESS\n      });\n    } // dispatch(loadUser());\n\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // Logout / Clear Profile\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: CLEAR_PROFILE\n  });\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/home/wasi/ds/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_PROFILE","setAuthToken","loginData","login","email","password","dispatch","body","JSON","stringify","formData","parse","username","console","log","type","err","errors","response","data","forEach","error","msg","logout"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACEC,gBADF,EAEEC,aAFF,EAGEC,WAHF,EAIEC,UAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,MAPF,EAQEC,aARF,QASO,SATP;AAUA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AAEA,MAAMC,SAAS,GAAG;AAChB,cAAW,kBADK;AAEhB,cAAY,WAFI,CAKlB;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AA1BkB,CAAlB;AA2BA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAMC,QAAN,IAAkB;AAG1D,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEL,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAf,CAAb;;AAKA,MAAI;AACF;AACA,QAAIK,QAAQ,GAAGF,IAAI,CAACG,KAAL,CAAWJ,IAAX,CAAf;;AACF,QAAGL,SAAS,CAACU,QAAV,KAAuBF,QAAQ,CAACN,KAAhC,IAAyCF,SAAS,CAACG,QAAV,KAAuBK,QAAQ,CAACL,QAA5E,EAAsF;AACpFQ,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACFR,MAAAA,QAAQ,CAAC;AACPS,QAAAA,IAAI,EAAElB;AADC,OAAD,CAAR;AAGD,KARK,CAWF;;AACD,GAZD,CAYE,OAAOmB,GAAP,EAAY;AACZ,UAAMC,MAAM,GAAGD,GAAG,CAACE,QAAJ,CAAaC,IAAb,CAAkBF,MAAjC;;AAEA,QAAIA,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACG,OAAP,CAAeC,KAAK,IAAIf,QAAQ,CAACd,QAAQ,CAAC6B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACD;;AAEDhB,IAAAA,QAAQ,CAAC;AACPS,MAAAA,IAAI,EAAEjB;AADC,KAAD,CAAR;AAGD;AACF,CA/BM,C,CAiCP;;AACA,OAAO,MAAMyB,MAAM,GAAG,MAAMjB,QAAQ,IAAI;AACtCA,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEf;AAAR,GAAD,CAAR;AACAM,EAAAA,QAAQ,CAAC;AAAES,IAAAA,IAAI,EAAEhB;AAAR,GAAD,CAAR;AACD,CAHM","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  CLEAR_PROFILE\n} from './types';\nimport setAuthToken from '../utils/setAuthToken';\n\n// login json\n\nconst loginData = {\n  \"username\":\"hruday@gmail.com\",\n  \"password\" :'hruday123'\n  }\n\n// Load User\n// export const loadUser = () => async dispatch => {\n//   if (localStorage.token) {\n//     setAuthToken(localStorage.token);\n//   }\n\n//   try {\n//     const res = await axios.get('/api/auth');\n\n//     dispatch({\n//       type: USER_LOADED,\n//       payload: res.data\n//     });\n//   } catch (err) {\n//     dispatch({\n//       type: AUTH_ERROR\n//     });\n//   }\n// };\n\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n  \n\n  const body = JSON.stringify({ email, password });\n\n  \n  \n\n  try {\n    // const res = await axios.post('/api/auth', body, config);\n    let formData = JSON.parse(body);\n  if(loginData.username === formData.email && loginData.password === formData.password) {\n    console.log('login success')\n  dispatch({\n    type: LOGIN_SUCCESS,\n  });\n}\n\n\n    // dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout / Clear Profile\nexport const logout = () => dispatch => {\n  dispatch({ type: CLEAR_PROFILE });\n  dispatch({ type: LOGOUT });\n};\n"]},"metadata":{},"sourceType":"module"}